package oopproject;
import javax.swing.*;
import java.awt.*;
import java.time.LocalDateTime;
import java.util.*;
import java.util.ArrayList;
import java.util.List;
import java.time.format.DateTimeFormatter;

public class InvoiceForm extends javax.swing.JFrame {
 private Order order;
 private Payment payment;
private CustomerDashboard dashboard;
     public InvoiceForm(Order order) {
    this.order = order;
    this.payment = payment;
    this.dashboard = dashboard;
        try {
            initComponents();
            setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            setLocationRelativeTo(null);
            this.setSize(400, 500);
            loadInvoiceData();
            if (order != null && order.getInvoice() != null && order.getPaymentMethod() != null) {
                order.getInvoice().saveInvoice("invoices.txt", order);
            }
        } catch (Exception e) {
            System.out.println("Error initializing InvoiceForm: " + e.getMessage());
            e.printStackTrace();
        }
    }

    public InvoiceForm() {
        initComponents();
        this.setSize(400, 500);
        this.setLocationRelativeTo(null);
    }

     private void loadInvoiceData() {
        try {
            if (order != null && order.getInvoice() != null) {
                StringBuilder details = new StringBuilder();
                details.append("Order Details:\n");
                details.append("-------------------------\n");
                for (Product item : order.getItems()) {
                    details.append(String.format("%s (x%d) - $%.2f\n", item.getName(), item.getSelectedQuantity(), item.getPrice()));
                }
                details.append("-------------------------\n");

                jTextArea_invoiceDetails.setText(details.toString());
                jLabel_invoiceId.setText("Invoice ID: " + (order.getInvoice().getInvoiceId() != null ? order.getInvoice().getInvoiceId() : "N/A"));
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
                String formattedDateTime = LocalDateTime.now().format(formatter);
                jLabel_dateTime.setText("Date/Time: " + formattedDateTime);
                jLabel_total.setText("Total Amount: $" + String.format("%.2f", order.getInvoice().getTotalAmount()));
                jLabel_paymentMethod.setText("Payment Method: " + (payment != null ? payment.getMethod() : order.getPaymentMethod() != null ? order.getPaymentMethod() : "Not Selected"));
            } else {
                jTextArea_invoiceDetails.setText("No order data available.");
                jLabel_invoiceId.setText("Invoice ID: N/A");
                jLabel_dateTime.setText("Date/Time: N/A");
                jLabel_total.setText("Total Amount: $0.00");
                jLabel_paymentMethod.setText("Payment Method: Not Selected");
            }
        } catch (Exception e) {
            System.out.println("Error loading invoice data: " + e.getMessage());
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading invoice data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel_title = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_invoiceDetails = new javax.swing.JTextArea();
        jButton_confirm = new javax.swing.JButton();
        jButton_cancel = new javax.swing.JButton();
        jLabel_invoiceId = new javax.swing.JLabel();
        jLabel_dateTime = new javax.swing.JLabel();
        jLabel_total = new javax.swing.JLabel();
        jLabel_paymentMethod = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(380, 510));

        jLabel_title.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_title.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_title.setText("Invoice");
        jLabel_title.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jTextArea_invoiceDetails.setEditable(false);
        jTextArea_invoiceDetails.setColumns(20);
        jTextArea_invoiceDetails.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jTextArea_invoiceDetails.setRows(5);
        jTextArea_invoiceDetails.setText("Invoice Details");
        jTextArea_invoiceDetails.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jScrollPane1.setViewportView(jTextArea_invoiceDetails);

        jButton_confirm.setBackground(new java.awt.Color(30, 136, 229));
        jButton_confirm.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jButton_confirm.setForeground(new java.awt.Color(255, 255, 255));
        jButton_confirm.setText("Confirm");
        jButton_confirm.setOpaque(true);
        jButton_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_confirmActionPerformed(evt);
            }
        });

        jButton_cancel.setBackground(new java.awt.Color(30, 136, 229));
        jButton_cancel.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jButton_cancel.setForeground(new java.awt.Color(255, 255, 255));
        jButton_cancel.setText("Cancel");
        jButton_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_cancelActionPerformed(evt);
            }
        });

        jLabel_invoiceId.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_invoiceId.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel_invoiceId.setText("Invoice Id");

        jLabel_dateTime.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_dateTime.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel_dateTime.setText("Date");

        jLabel_total.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_total.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jLabel_total.setText("Total");

        jLabel_paymentMethod.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_paymentMethod.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel_paymentMethod.setText("Payment Method");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel_paymentMethod, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                        .addComponent(jLabel_total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel_invoiceId, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_dateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_cancel)
                .addGap(42, 42, 42)
                .addComponent(jButton_confirm)
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_invoiceId, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel_dateTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_paymentMethod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_total)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_cancel)
                    .addComponent(jButton_confirm))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel_title)
                        .addGap(0, 362, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_title, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_cancelActionPerformed
        ViewCart viewCart = new ViewCart(dashboard, order);
        viewCart.setVisible(true);
        viewCart.pack();
        viewCart.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_jButton_cancelActionPerformed

    private void jButton_confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_confirmActionPerformed
        if (order != null && order.getInvoice() != null) {
        try {
            // [CHANGE] Create Transaction using order details
            List<String> productNames = new ArrayList<>();
            for (Product product : order.getItems()) {
                productNames.add(product.getName());
            }
            Payment payment = new Payment(
                "PAY" + System.currentTimeMillis(),
                order.getPaymentMethod() != null ? order.getPaymentMethod() : "Not Selected",
                order.getInvoice().getTotalAmount(),
                productNames
            );
            // [CHANGE] Use payment.getMethod() to ensure correct method
            Transaction transaction = new Transaction(
                "TXN" + System.currentTimeMillis(),
                payment.getMethod(),
                order.getInvoice().getTotalAmount(),
                LocalDateTime.now()
            );
            transaction.saveTransaction("transactions.txt");
            // Open TransactionForm
            TransactionForm transactionForm = new TransactionForm(transaction, order.getInvoice());
            transactionForm.setVisible(true);
            transactionForm.pack();
            transactionForm.setLocationRelativeTo(null);
            this.dispose();
        } catch (Exception e) {
            System.err.println("Error opening TransactionForm: " + e.getMessage());
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error opening TransactionForm: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "No order data available!", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton_confirmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(() -> {
            List<Product> sampleItems = new ArrayList<>();
            Order order = new Order("ORD789", sampleItems);
            order.setPaymentMethod("Cash on Delivery");
            order.confirmOrder();
            new InvoiceForm(order).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_cancel;
    private javax.swing.JButton jButton_confirm;
    private javax.swing.JLabel jLabel_dateTime;
    private javax.swing.JLabel jLabel_invoiceId;
    private javax.swing.JLabel jLabel_paymentMethod;
    private javax.swing.JLabel jLabel_title;
    private javax.swing.JLabel jLabel_total;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea_invoiceDetails;
    // End of variables declaration//GEN-END:variables
}
